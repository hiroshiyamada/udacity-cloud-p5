version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  linting:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x ./hadolint
            pip install pylint
      - run:
          name: run lint
          command: |
            ./hadolint Dockerfile
            pylint --disable=R,C,W1203,W1202,W0613 app.py
  build_and_deploy_docker_app:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker
          command: |
            docker build -t udacity-capstone .
      - run:
          name: push docker
          command: |
            dockerpath="${DOCKERHUB_USER}/udacity-capstone"
            docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASS}
            docker tag udacity-capstone ${DOCKERHUB_USER}/udacity-capstone:latest
            docker push ${DOCKERHUB_USER}/udacity-capstone:latest
  create-small-cluster:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ""
      - aws-eks/create-cluster:
          cluster-name: eks-udacity-capstone
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ""
  create-service:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-udacity-capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: services.json
          resource-name: blue-green-lb
  create-deployment:
    docker:
      - image: 'cimg/python:3.10'
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-udacity-capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.json
          resource-name: blue-deployment

workflows:
  deployment:
    jobs:
      - linting
      - build_and_deploy_docker_app
      - create-small-cluster
      - create-service:
          requires:
            - create-small-cluster
      - create-deployment:
          requires:
            - create-service
      - aws-eks/update-container-image:
          cluster-name: eks-udacity-capstone
          container-image-updates: 'blue=cybermech/udacity-capstone:latest'
          requires:
            - create-deployment
          resource-name: blue-deployment

