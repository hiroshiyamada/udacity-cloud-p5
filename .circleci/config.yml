version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3

jobs:
  linting-for-blue:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            cd blue
            wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x ./hadolint
            pip install pylint
      - run:
          name: run lint
          command: |
            cd blue
            ./hadolint Dockerfile
            pylint --disable=R,C,W1203,W1202,W0613 blue_app.py
  build_and_deploy_blue_docker_app:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker
          command: |
            cd blue
            docker build -t udacity-capstone-blue .
      - run:
          name: push docker
          command: |
            cd blue
            dockerpath="${DOCKERHUB_USER}/udacity-capstone-blue"
            docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASS}
            docker tag udacity-capstone-blue ${DOCKERHUB_USER}/udacity-capstone-blue:latest
            docker push ${DOCKERHUB_USER}/udacity-capstone-blue:latest
  create-small-cluster:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ""
      - aws-eks/create-cluster:
          cluster-name: eks-udacity-capstone
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ""
  create-lb-for-blue:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-udacity-capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: blue/blue_services.json
          resource-name: service/blue-green-lb
  deploy-blue:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-udacity-capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: blue/blue_deployment.json
          resource-name: deployment/blue

  linting-for-green:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            cd green
            wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x ./hadolint
            pip install pylint
      - run:
          name: run lint
          command: |
            cd green
            ./hadolint Dockerfile
            pylint --disable=R,C,W1203,W1202,W0613 green_app.py
  build_and_deploy_green_docker_app:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build docker
          command: |
            cd green
            docker build -t udacity-capstone-green .
      - run:
          name: push docker
          command: |
            cd green
            dockerpath="${DOCKERHUB_USER}/udacity-capstone-green"
            docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASS}
            docker tag udacity-capstone-green ${DOCKERHUB_USER}/udacity-capstone-green:latest
            docker push ${DOCKERHUB_USER}/udacity-capstone-green:latest
  deploy-green:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-udacity-capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: green/green_deployment.json
          resource-name: deployment/green
  update-lb-for-green:
    docker:
      - image: "cimg/python:3.10"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-udacity-capstone
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: green/green_services.json
          resource-name: service/blue-green-lb

workflows:
  blue-green-deployment:
    jobs:
      - linting-for-blue
      - build_and_deploy_blue_docker_app:
          requires:
            - linting-for-blue
      # - create-small-cluster:
      #     requires:
      #       - build_and_deploy_blue_docker_app
      - create-lb-for-blue:
          requires:
            - build_and_deploy_blue_docker_app
      - deploy-blue:
          requires:
            - create-lb-for-blue
      - aws-eks/update-container-image:
          cluster-name: eks-udacity-capstone
          container-image-updates: "blue=cybermech/udacity-capstone-blue:latest"
          resource-name: deployment/blue
          requires:
            - deploy-blue
      - linting-for-green
      - build_and_deploy_green_docker_app:
          requires:
            - linting-for-green
      - deploy-green:
          requires:
            - build_and_deploy_green_docker_app
            - deploy-blue
      - update-lb-for-green:
          requires:
            - deploy-green
      - aws-eks/update-container-image:
          cluster-name: eks-udacity-capstone
          container-image-updates: "green=cybermech/udacity-capstone-green:latest"
          resource-name: deployment/green
          requires:
            - update-lb-for-green
